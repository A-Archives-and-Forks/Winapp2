<?xml version="1.0"?>
<doc>
<assembly>
<name>
winapp2ool
</name>
</assembly>
<members>
<member name="T:winapp2ool.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:winapp2ool.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:winapp2ool.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="T:winapp2ool.commandLineHandler">
 <summary>
 This module handles the commandline args presented to winapp2ool and attempts to pass them off to their respective modules
 </summary>
</member>
<member name="M:winapp2ool.commandLineHandler.invertSettingAndRemoveArg(System.Boolean@,System.String@)">
 <summary>
 Flips a boolean setting and removes its associated argument from the args list
 </summary>
 <param name="setting">The boolean setting to be flipped</param>
 <param name="arg">The string containing the argument that flips the boolean</param>
</member>
<member name="M:winapp2ool.commandLineHandler.invertAndRemoveAndRename(System.Boolean@,System.String@,System.String@,System.String)">
 <summary>
 Calls invertSettingAndRemoveArg and assigns a new name to the given reference variable
 </summary>
 <param name="setting">The boolean setting</param>
 <param name="arg">The arg controlling the setting</param>
 <param name="name">A reference to a String to be renamed</param>
 <param name="newname">The new value for the String to be renamed</param>
</member>
<member name="M:winapp2ool.commandLineHandler.handleDownloadBools(System.Boolean@,System.Boolean@)">
 <summary>
 Processes whether to download and which file to download
 </summary>
 <param name="download">The boolean indicating winapp2.ini should be downloaded</param>
 <param name="ncc">The boolean indicating that the non-ccleaner variant of winapp2.ini should be used</param>
</member>
<member name="M:winapp2ool.commandLineHandler.autoDebug">
 <summary>
 Handles the commandline args for WinappDebug
 </summary>
 WinappDebug specific command line args
 -c      : enable autocorrect
</member>
<member name="M:winapp2ool.commandLineHandler.autoTrim">
 <summary>
 Handles the commandline args for Trim
 </summary>
 Trim commandline args
 -d     : download the latest winapp2.ini
 -ncc   : download the latest non-ccleaner winapp2.ini (implies -d)
</member>
<member name="M:winapp2ool.commandLineHandler.autoMerge">
 <summary>
 Handles the commandline args for Merge
 </summary>
  Merge specific command line args
 -mm      : toggle mergemode from replace and add to replace and remove
 -r       : use removed entries.ini as the merge file's name
 -c       : use custom.ini as the merge file's name
</member>
<member name="M:winapp2ool.commandLineHandler.autoDiff">
 <summary>
 Handles the commandline args for Diff
 </summary>
  Diff commandline args
 -d          : download the latest winapp2.ini
 -ncc        : download the latest non-ccleaner winapp2.ini (implies -d)
 -savelog    : save the diff.txt log
</member>
<member name="M:winapp2ool.commandLineHandler.autoccini">
 <summary>
 Handles the commandline args for CCiniDebug
 </summary>
  CCiniDebug commandline args:
 -noprune : disable pruning of stale winapp2.ini entries
 -nosort  : disable sorting ccleaner.ini alphabetically
 -nosave  : disable saving the modified ccleaner.ini back to file
</member>
<member name="M:winapp2ool.commandLineHandler.autodownload">
 <summary>
 Processes the commandline args for Downloader
 </summary>
</member>
<member name="M:winapp2ool.commandLineHandler.getFileName(System.String,System.String@)">
 <summary>
 Renames an iniFile object if provided a commandline arg to do so
 </summary>
 <param name="flag">The flag that precedes the name specification in the args list</param>
 <param name="name">The reference to the name parameter of an iniFile object</param>
</member>
<member name="M:winapp2ool.commandLineHandler.getFileNameAndDir(System.String,winapp2ool.iniFileHandler.iniFile@)">
 <summary>
 Applies a new directory and name to an iniFile object 
 </summary>
 <param name="flag">The flag preceeding the file/path parameter in the arg list</param>
 <param name="file">The iniFile object to be modified</param>
</member>
<member name="M:winapp2ool.commandLineHandler.getFileParams(System.String@,winapp2ool.iniFileHandler.iniFile@)">
 <summary>
 Takes in a full form filepath with directory and assigns the directory and filename components to the given iniFile object
 </summary>
 <param name="arg">The filepath argument</param>
 <param name="file">The iniFile object to be modified</param>
</member>
<member name="M:winapp2ool.commandLineHandler.processCommandLineArgs">
 <summary>
 Initializes the processing of the commandline args and hands the remaining arguments off to the respective module's handler
 </summary>
</member>
<member name="M:winapp2ool.commandLineHandler.getFileAndDirParams">
 <summary>
 Gets the directory and name info for each file given (if any)
 </summary>
</member>
<member name="M:winapp2ool.commandLineHandler.getParams(System.Int32,winapp2ool.iniFileHandler.iniFile)">
 <summary>
 Processes numerically ordered directory (d) and file (f) commandline args on a per-file basis
 </summary>
 <param name="someNumber">The number (1-indexed) of our current internal iniFile</param>
 <param name="someFile">A reference to the iniFile object being operated on</param>
</member>
<member name="M:winapp2ool.commandLineHandler.validateArgs">
 <summary>
 Enforces that commandline args are properly formatted in {"-flag","data"} format
 </summary>
</member>
<member name="M:winapp2ool.commandLineHandler.printErrExit(System.String)">
 <summary>
 Prints an error to the user and exits the application after they have pressed a key
 </summary>
 <param name="errTxt">The String containing the erorr text to be printed to the user</param>
</member>
<member name="T:winapp2ool.CCiniDebug">
 <summary>
 A module whose purpose is to perform some housekeeping on ccleaner.ini to help clean up after winapp2.ini
 </summary>
</member>
<member name="M:winapp2ool.CCiniDebug.initDefaultSettings">
 <summary>
 Restores the default state of the module's parameters
 </summary>
</member>
<member name="M:winapp2ool.CCiniDebug.initCCDebugParams(winapp2ool.iniFileHandler.iniFile@,winapp2ool.iniFileHandler.iniFile@,winapp2ool.iniFileHandler.iniFile@,System.Boolean@,System.Boolean@,System.Boolean@)">
 <summary>
 Initializes the default module settings and returns references to them to the calling function
 </summary>
 <param name="firstFile">The iniFile object to represent winapp2.ini</param>
 <param name="secondFile">The iniFile object to represent ccleaner.ini</param>
 <param name="thirdFile">The iniFile object containing the save path information</param>
 <param name="pf">The boolean for pruning</param>
 <param name="sa">The boolean for saving</param>
 <param name="so">The boolean for sorting</param>
</member>
<member name="M:winapp2ool.CCiniDebug.remoteCC(winapp2ool.iniFileHandler.iniFile,winapp2ool.iniFileHandler.iniFile,winapp2ool.iniFileHandler.iniFile,System.Boolean,System.Boolean,System.Boolean)">
 <summary>
 Runs the debugger when called from outside the module
 </summary>
 <param name="firstfile">The winapp2.ini iniFile</param>
 <param name="secondfile">The ccleaner.ini iniFile</param>
 <param name="thirdfile">The iniFile with the save location</param>
 <param name="pf">Boolean for pruning</param>
 <param name="sa">Boolean for saving</param>
 <param name="so">Boolean for sorting</param>
</member>
<member name="M:winapp2ool.CCiniDebug.printMenu">
 <summary>
 Prints the CCiniDebug menu to the user
 </summary>
</member>
<member name="M:winapp2ool.CCiniDebug.handleUserInput(System.String)">
 <summary>
 Handles the user's input from the menu
 </summary>
 <param name="input">The string containing the user's input</param>
</member>
<member name="M:winapp2ool.CCiniDebug.initDebug">
 <summary>
 Performs the debugging process
 </summary>
</member>
<member name="M:winapp2ool.CCiniDebug.prune(winapp2ool.iniFileHandler.iniSection@)">
 <summary>
 Scans for and removes stale winapp2.ini entry settings from the Options section of a ccleaner.ini file
 </summary>
 <param name="optionsSec">The iniSection object containing the Options from ccleaner.ini</param>
</member>
<member name="M:winapp2ool.CCiniDebug.trimStrs(System.String[],System.String@)">
 <summary>
 Removes any instance of the provided strings from a string and returns what's left
 </summary>
 <param name="toRemove">The array of strings to be removed</param>
 <param name="inputTxt">The given string to be modified</param>
</member>
<member name="M:winapp2ool.CCiniDebug.sortCC">
 <summary>
 Sorts the keys in the Options (only) section of ccleaner.ini
 </summary>
</member>
<member name="T:winapp2ool.Diff">
 <summary>
 A module whose purpose is to allow a user to perform a diff on two winapp2.ini files
 </summary>
</member>
<member name="M:winapp2ool.Diff.initDiffParams(winapp2ool.iniFileHandler.iniFile@,winapp2ool.iniFileHandler.iniFile@,winapp2ool.iniFileHandler.iniFile@,System.Boolean@,System.Boolean@,System.Boolean@)">
 <summary>
 Initializes the default module settings and returns references to them to the calling function
 </summary>
 <param name="firstFile">The old winapp2.ini file</param>
 <param name="secondFile">The new winapp2.ini file</param>
 <param name="thirdFile">The log file</param>
 <param name="d">The boolean representing whether or not a file should be downloaded</param>
 <param name="dncc">The boolean representing whether or not the non-ccleaner file should be downloaded</param>
 <param name="sl">The boolean representing whether or not we should save our log</param>
</member>
<member name="M:winapp2ool.Diff.remoteDiff(winapp2ool.iniFileHandler.iniFile@,winapp2ool.iniFileHandler.iniFile,winapp2ool.iniFileHandler.iniFile,System.Boolean,System.Boolean,System.Boolean)">
 <summary>
 Runs the Differ from outside the module
 </summary>
 <param name="firstFile">The old winapp2.ini file</param>
 <param name="secondFile">The new winapp2.ini file</param>
 <param name="thirdFile">The log file</param>
 <param name="d">The boolean representing whether or not a file should be downloaded</param>
 <param name="dncc">The boolean representing whether or not the non-ccleaner file should be downloaded</param>
 <param name="sl">The boolean representing whether or not we should save our log</param>
</member>
<member name="M:winapp2ool.Diff.initDefaultSettings">
 <summary>
 Restores the default state of the module's parameters
 </summary>
</member>
<member name="M:winapp2ool.Diff.printMenu">
 <summary>
 Prints the main menu to the user
 </summary>
</member>
<member name="M:winapp2ool.Diff.handleUserInput(System.String)">
 <summary>
 Handles the user input from the main menu
 </summary>
 <param name="input">The String containing the user's input from the menu</param>
</member>
<member name="M:winapp2ool.Diff.initDiff">
 <summary>
 Carries out the main set of Diffing operations
 </summary>
</member>
<member name="M:winapp2ool.Diff.getVer(winapp2ool.iniFileHandler.iniFile)">
 <summary>
 Gets the version from winapp2.ini
 </summary>
 <param name="someFile">winapp2.ini format iniFile object</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.Diff.differ">
 <summary>
 Performs the diff and outputs the info to the user
 </summary>
</member>
<member name="M:winapp2ool.Diff.compareTo">
 <summary>
 Compares two winapp2.ini format iniFiles and builds the output for the user containing the differences
 </summary>
 <returns></returns>
</member>
<member name="M:winapp2ool.Diff.getChangesFromList(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey},System.String@,System.String)">
 <summary>
 Handles the Added and Removed cases for changes 
 </summary>
 <param name="keyList">A list of iniKeys that have been added/removed</param>
 <param name="out">The output text to be appended to</param>
 <param name="changeTxt">The text to appear in the output</param>
</member>
<member name="M:winapp2ool.Diff.chkLsts(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@,System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{winapp2ool.iniFileHandler.iniKey,winapp2ool.iniFileHandler.iniKey}}@)">
 <summary>
 Observes lists of added and removed keys from a section for diffing, adds any changes to the updated key 
 </summary>
 <param name="removedKeys">The list of iniKeys that were removed</param>
 <param name="addedKeys">The list of iniKeys that were added</param>
 <param name="updatedKeys">The list containing iniKeys rationalized by this function as having been updated rather than added or removed</param>
</member>
<member name="M:winapp2ool.Diff.updateKeys(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{winapp2ool.iniFileHandler.iniKey,winapp2ool.iniFileHandler.iniKey}}@,System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@,System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@,winapp2ool.iniFileHandler.iniKey,winapp2ool.iniFileHandler.iniKey)">
 <summary>
 Performs change tracking for chkLst 
 </summary>
 <param name="updLst">The list of updated keys</param>
 <param name="aKeys">The list of added keys</param>
 <param name="rKeys">The list of removed keys</param>
 <param name="key">A removed inikey</param>
 <param name="skey">An added iniKey</param>
</member>
<member name="M:winapp2ool.Diff.getDiff(winapp2ool.iniFileHandler.iniSection,System.String)">
 <summary>
 Returns a string containing a menu box listing the change type and entry, followed by the entry's toString
 </summary>
 <param name="section">an iniSection object to be diffed</param>
 <param name="changeType">The type of change to observe</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.Diff.log(System.String)">
 <summary>
 Saves a String to the log file
 </summary>
 <param name="toLog">The string to be appended to the log</param>
</member>
<member name="T:winapp2ool.Downloader">
 <summary>
 This module contains functions that allow the user to reach online resources. 
 Its primary user-facing functionality is to present the list of downloads from the GitHub to the user
 </summary>
</member>
<member name="M:winapp2ool.Downloader.printMenu">
 <summary>
 Prints the main menu to the user
 </summary>
</member>
<member name="M:winapp2ool.Downloader.printAdvMenu">
 <summary>
 Prints the advanced downloads menu
 </summary>
</member>
<member name="M:winapp2ool.Downloader.handleAdvInput(System.String)">
 <summary>
 Handles the user input for the advanced download menu
 </summary>
 <param name="input">The string containing the user's input</param>
</member>
<member name="M:winapp2ool.Downloader.handleUserInput(System.String)">
 <summary>
 Handles the user input for the menu
 </summary>
 <param name="input">The String containing the user's input</param>
</member>
<member name="M:winapp2ool.Downloader.getRemoteWinapp(System.Boolean)">
 <summary>
 Feteches a remote winapp2.ini file from GitHub
 </summary>
 <param name="ncc">The Boolean specifying whether the non-CCleaner version should be downloaded</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.Downloader.getFileDataAtLineNum(System.String,System.Int32,System.Boolean)">
 <summary>
 Reads a file until a specified line number 
 </summary>
 <param name="path">The path (or online address) of the file</param>
 <param name="lineNum">The line number to read to</param>
 <param name="remote">The boolean specifying whether the resource is remote (online)</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.Downloader.checkOnline">
 <summary>
 Returns true if we are able to connect to the internet, otherwise, returns false.
 </summary>
</member>
<member name="M:winapp2ool.Downloader.getRemoteIniFile(System.String)">
 <summary>
 Returns an iniFile object created using an online resource
 </summary>
 ie. GitHub
 <param name="address">A URL pointing to an online .ini file</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.Downloader.getTargetLine(System.IO.StreamReader,System.Int32)">
 <summary>
 Reads a file only until reaching a specific line and then returns that line as a String
 </summary>
 <param name="reader">An open file stream</param>
 <param name="lineNum">The target line number</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.Downloader.remoteDownload(System.String,System.String,System.String,System.Boolean)">
 <summary>
 Handles a request to download a file from outside the module
 </summary>
 <param name="dir">The directory to which the file should be downloaded</param>
 <param name="name">The name with which to save the file</param>
 <param name="link">The URL to download from</param>
 <param name="prompt">Boolean specifying whether or not the user should be asked to overwrite the file should it exist</param>
</member>
<member name="M:winapp2ool.Downloader.autoUpdate">
 <summary>
 Downloads the latest version of winapp2ool.exe and replaces the currently running executable with it before launching that new executable and closing the program.
 </summary>
</member>
<member name="M:winapp2ool.Downloader.download(System.String,System.Boolean)">
 <summary>
 Prompts the user to rename or overwrite a file if necessary before downloading.
 </summary>
 <param name="link">The URL to be downloaded from</param>
 <param name="prompt">The boolean indicating whether or not the user should be prompted to rename the file should it exist already.</param>
</member>
<member name="M:winapp2ool.Downloader.dlFile(System.String,System.String)">
 <summary>
 Performs the download, returns a boolean indicating the success of the download.
 </summary>
 <param name="link">The URL to be downloaded from</param>
 <param name="path">The file path to be saved to</param>
 <returns></returns>
</member>
<member name="T:winapp2ool.iniFileHandler">
 <summary>
 A collection of methods and classes for interacting with .ini files 
 </summary>
</member>
<member name="M:winapp2ool.iniFileHandler.getValues(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey})">
 <summary>
 Returns the values from a list of iniKey objects as a list of strings
 </summary>
 <param name="keyList">A list of iniKey objects to parse values from</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.iniFileHandler.getLineNumsFromKeyList(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@)">
 <summary>
 Returns the line numbers from a list of iniKey objects as a list of integers
 </summary>
 <param name="keyList">A list of iniKey objects to parse line numbers from</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.iniFileHandler.addKeyToListIf(winapp2ool.iniFileHandler.iniKey@,System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@,System.Boolean)">
 <summary>
 Adds an iniKey to a list of iniKeys if the given condition is met
 </summary>
 <param name="key">The key to be added</param>
 <param name="keyList">The list to be added to</param>
 <param name="cond">The condition under which the key should be added to the list</param>
</member>
<member name="M:winapp2ool.iniFileHandler.chkFileExist(winapp2ool.iniFileHandler.iniFile)">
 <summary>
 Enforces that a user selected file exists
 </summary>
 <param name="someFile">An iniFile object with user defined path and name parameters</param>
</member>
<member name="M:winapp2ool.iniFileHandler.chkDirExist(System.String@)">
 <summary>
 Enforces that a user defined directory exists, either by selecting a new one or creating one.
 </summary>
 <param name="dir">A user defined windows directory</param>
</member>
<member name="M:winapp2ool.iniFileHandler.fileChooser(winapp2ool.iniFileHandler.iniFile@)">
 <summary>
 Presents a menu to the user allowing them to perform some file and directory operations
 </summary>
 <param name="someFile">An iniFile object with user definable parameters</param>
</member>
<member name="M:winapp2ool.iniFileHandler.handleFileChooserChoice(winapp2ool.iniFileHandler.iniFile@)">
 <summary>
 Allows the user change the file name or directory of a given iniFile object
 </summary>
 <param name="someFile">The iniFile object whose parameters are being modified by the user</param>
</member>
<member name="M:winapp2ool.iniFileHandler.handleFileChooserConfirm(winapp2ool.iniFileHandler.iniFile@)">
 <summary>
 Confirms the user's choice of a file's parameters in the File Chooser and allows them to make changes before saving
 </summary>
 <param name="someFile">The iniFile object whose parameters are being modified by the user</param>
</member>
<member name="M:winapp2ool.iniFileHandler.dirChooser(System.String@)">
 <summary>
 Presents an interface to the user allowing them to operate on windows directory parameters
 </summary>
 <param name="dir">A user definable windows directory path</param>
</member>
<member name="M:winapp2ool.iniFileHandler.handleDirChooserChoice(System.String@)">
 <summary>
 Allows the user to select a directory using a similar interface to the File Chooser
 </summary>
 <param name="dir">The String containing the directory the user is parameterizing</param>
</member>
<member name="M:winapp2ool.iniFileHandler.handleDirChooserConfirm(System.String@)">
 <summary>
 Confirms the user's choice of directory and allows them to change it 
 </summary>
 <param name="dir">The String containing the directory the user is parameterizing</param>
</member>
<member name="T:winapp2ool.iniFileHandler.iniFile">
 <summary>
 An object representing a .ini configuration file
 </summary>
</member>
<member name="M:winapp2ool.iniFileHandler.iniFile.ToString">
 <summary>
 Returns an iniFile as it would appear on disk as a String
 </summary>
 <returns></returns>
</member>
<member name="M:winapp2ool.iniFileHandler.iniFile.#ctor(System.String,System.String,System.String)">
 <summary>
 Creates an uninitalized iniFile with a directory and a filename.
 </summary>
 <param name="directory">A windows directory containing a .ini file</param>
 <param name="filename">The name of the .ini file contained in the given directory </param>
 <param name="rename">A provided suggestion for a rename should the user open the File Chooser on this file</param>
</member>
<member name="M:winapp2ool.iniFileHandler.iniFile.overwriteToFile(System.String)">
 <summary>
 Writes the contents of a provided String to our iniFile's path, overwriting any existing contents
 </summary>
 <param name="tostr">The string to be written to disk</param>
</member>
<member name="M:winapp2ool.iniFileHandler.iniFile.resetParams">
 <summary>
 Restores the initial directory and name parameters in the iniFile 
 </summary>
</member>
<member name="M:winapp2ool.iniFileHandler.iniFile.path">
 <summary>
 Returns the full windows file path of the iniFile as a String
 </summary>
 <returns></returns>
</member>
<member name="M:winapp2ool.iniFileHandler.iniFile.getLineNumsFromSections">
 <summary>
 Returns the starting line number of each section in the iniFile as a list of integers
 </summary>
 <returns></returns>
</member>
<member name="M:winapp2ool.iniFileHandler.iniFile.#ctor(System.String[])">
 <summary>
 Constructs an iniFile object using an internet source
 </summary>
 <param name="lines">The array of Strings representing a remote .ini file</param>
</member>
<member name="M:winapp2ool.iniFileHandler.iniFile.processiniLine(System.String@,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Int32}@,System.Boolean@)">
 <summary>
 Processes a line in a .ini file and updates the iniFile object metadata accordingly
 </summary>
 <param name="currentLine">The current string being read</param>
 <param name="sectionToBeBuilt">The pending list of strings to be built into an iniSection</param>
 <param name="lineTrackingList">The associated list of line number integers for the section strings</param>
 <param name="lastLineWasEmpty">The boolean representing whether or not the previous line was empty</param>
</member>
<member name="M:winapp2ool.iniFileHandler.iniFile.updSec(System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Int32}@,System.String,System.Boolean@)">
 <summary>
 Manages line and number tracking for iniSections whose construction is pending
 </summary>
 <param name="secList">The list of strings for the iniSection</param>
 <param name="lineList">The list of line numbers for the iniSection</param>
 <param name="curLine">The current line to be added to the section</param>
</member>
<member name="M:winapp2ool.iniFileHandler.iniFile.init">
 <summary>
 Attempts to read a .ini file from disk and initalize the iniFile object
 </summary>
</member>
<member name="M:winapp2ool.iniFileHandler.iniFile.validate">
 <summary>
 Ensures that any call to an ini file on the system will be to a file that exists in a directory that exists.
 If an iniFile's sections already exist, skip this.
 </summary>
</member>
<member name="M:winapp2ool.iniFileHandler.iniFile.sortSections(System.Collections.Generic.List{System.String})">
 <summary>
 Reorders the iniSections in an iniFile object to be in the same sorted state as a provided list of Strings
 </summary>
 <param name="sortedSections">The sorted state of the sections by name</param>
</member>
<member name="M:winapp2ool.iniFileHandler.iniFile.findCommentLine(System.String)">
 <summary>
 Find the line number of a comment by its string. Returns -1 if not found
 </summary>
 <param name="com">The string containing the comment text to be searched for</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.iniFileHandler.iniFile.getSectionNamesAsList">
 <summary>
 Returns the section names from the iniFile object as a list of Strings
 </summary>
 <returns></returns>
</member>
<member name="M:winapp2ool.iniFileHandler.iniFile.mkSection(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Int32})">
 <summary>
 Attempts to create a new iniSection object and add it to the iniFile
 </summary>
 <param name="sectionToBeBuilt">The list of strings in the iniSection</param>
 <param name="lineTrackingList">The list of line numbers associated with the given strings</param>
</member>
<member name="T:winapp2ool.iniFileHandler.iniSection">
 <summary>
 An object representing a section of a .ini file
 </summary>
</member>
<member name="M:winapp2ool.iniFileHandler.iniSection.constructKeyLists(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}}@)">
 <summary>
 Sorts a section's keys into lists based on keyType
 </summary>
 Expects that the number of parameters in keyTypeList is equal to the number of values in listOfKeyLists, with the final list being an "error" list
 holding keys of types not defined in the keyTypeList
 <param name="keyTypeList"></param>
 <param name="listOfKeyLists"></param>
</member>
<member name="M:winapp2ool.iniFileHandler.iniSection.removeKeys(System.Collections.Generic.List{System.Int32})">
 <summary>
 Removes a series of keys from the section
 </summary>
 <param name="indicies"></param>
</member>
<member name="M:winapp2ool.iniFileHandler.iniSection.getFullName">
 <summary>
 Returns the iniSection name as it would appear on disk.
 </summary>
 <returns></returns>
</member>
<member name="M:winapp2ool.iniFileHandler.iniSection.#ctor">
 <summary>
 Creates a new (empty) iniSection object.
 </summary>
</member>
<member name="M:winapp2ool.iniFileHandler.iniSection.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Int32})">
 <summary>
 Creates a new iniSection object without tracking the line numbers
 </summary>
 <param name="listOfLines">The list of strings comprising the iniSection</param>
</member>
<member name="M:winapp2ool.iniFileHandler.iniSection.getKeysAsList">
 <summary>
 Returns the keys in the iniSection as a list of Strings
 </summary>
 <returns></returns>
</member>
<member name="M:winapp2ool.iniFileHandler.iniSection.compareTo(winapp2ool.iniFileHandler.iniSection,System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@,System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@)">
 <summary>
 Compares two iniSections, returns false if they are not the same.
 </summary>
 <param name="ss">The section to be compared against</param>
 <param name="removedKeys">A return list on iniKey objects that appear in the iniFile object but not the given</param>
 <param name="addedKeys">A return list of iniKey objects that appear in the given iniFile object but not this one</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.iniFileHandler.iniSection.ToString">
 <summary>
 Returns an iniSection as it would appear on disk as a String
 </summary>
 <returns></returns>
</member>
<member name="T:winapp2ool.iniFileHandler.iniKey">
 <summary>
 An object representing the name value pairs that make up iniSections
 </summary>
</member>
<member name="M:winapp2ool.iniFileHandler.iniKey.nameIs(System.String)">
 <summary>
 Returns whether or not an iniKey's name is equal to a given value
 </summary>
 <param name="n">The string to check equality for</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.iniFileHandler.iniKey.typeIs(System.String)">
 <summary>
 Returns whether or not an iniKey's type is equal to a given value
 </summary>
 <param name="t">The string to check equality for</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.iniFileHandler.iniKey.vStartsOrEndsWith(System.String)">
 <summary>
 Returns whether or not an iniKey object's value begins or ends with a given value
 </summary>
 <param name="txt">The given string to search for</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.iniFileHandler.iniKey.nStartsOrEndsWith(System.String)">
 <summary>
 Returns whether or not an iniKey object's name begin or ends with a given value
 </summary>
 <param name="txt">The given string to search for</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.iniFileHandler.iniKey.vHas(System.String,System.Boolean)">
 <summary>
 Returns whether or not an iniKey object's value contains a given string with conditional case casting
 </summary>
 <param name="txt">The string to search for</param>
 <param name="toLower">A boolean specifying whether or not the strings should be cast to lowercase</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.iniFileHandler.iniKey.vHasAny(System.String[],System.Boolean)">
 <summary>
 Returns whether or not an iniKey object's value contains any of a given array of stringd with conditional case casting
 </summary>
 <param name="txts">The array of search strings</param>
 <param name="toLower">A boolean specifying whether or not the strings should be cast to lowercase</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.iniFileHandler.iniKey.vIs(System.String,System.Boolean)">
 <summary>
 Returns whether or not an iniKey object's value is equal to a given string with conditional case casting
 </summary>
 <param name="txt">The string to be searched for</param>
 <param name="toLower">A boolean specifying whether or not the strings should be cast to lowercase</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.iniFileHandler.iniKey.stripNums(System.String)">
 <summary>
 Returns an iniKey object's keyName field with numbers removed
 </summary>
 <param name="keyName">The string containing the iniKey's keyname</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.iniFileHandler.iniKey.#ctor(System.String,System.Int32)">
 <summary>
 Create an iniKey object from a string containing a name value pair
 </summary>
 <param name="line">A string in the format name=value</param>
 <param name="count">The line number for the string</param>
</member>
<member name="M:winapp2ool.iniFileHandler.iniKey.ToString">
 <summary>
 Returns the key in name=value format as a String
 </summary>
 <returns></returns>
</member>
<member name="T:winapp2ool.iniFileHandler.iniComment">
 <summary>
 An object representing a comment in a .ini file
 </summary>
</member>
<member name="M:winapp2ool.iniFileHandler.iniComment.#ctor(System.String,System.Int32)">
 <summary>
 Creates a new iniComment object
 </summary>
 <param name="c">The comment text</param>
 <param name="l">The line number</param>
</member>
<member name="T:winapp2ool.MenuMaker">
 <summary>
 Provides functions and methods for presenting and maintaining menus to a user
 </summary>
</member>
<member name="M:winapp2ool.MenuMaker.initMenu(System.String,System.Int32)">
 <summary>
 Initializes the menu 
 </summary>
 <param name="topper">The text to be displayed at the top of the menu screen</param>
 <param name="itemlen">The length in characters that should comprise the first bloc of options in the menu</param>
</member>
<member name="M:winapp2ool.MenuMaker.denyActionWithTopper(System.Boolean,System.String)">
 <summary>
 Sets the menu header to an error string conditionally, returns the given condition
 </summary>
 <param name="cond">The condition under which the error text should be printed</param>
 <param name="errText">The error text to be printed in the menu header</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.MenuMaker.print(System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
 <summary>
 Prints a menu line, option, or reset string, conditionally
 </summary>
 <param name="cond">The condition under which to print</param>
 <param name="printType">The type of menu information to print</param>
 <param name="str1">The first string or half string to be printed</param>
 <param name="optString">The alginment or second half string to be printed</param>
</member>
<member name="M:winapp2ool.MenuMaker.enStr(System.Boolean)">
 <summary>
 Returns the inverse state of a given setting as a String
 </summary>
 <param name="setting">The setting whose state will be reported</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.MenuMaker.exitModule(System.String)">
 <summary>
 Exits a menu or module by flipping the exitCode to true 
 </summary>
 <param name="name"></param>
</member>
<member name="M:winapp2ool.MenuMaker.printMenuTop(System.String[],System.Boolean)">
 <summary>
 Prints the top of the menu (containing the topper), any description text provided, the menu prompt, and the exit option
 </summary>
 <param name="descriptionItems">Items describing the menu</param>
 <param name="printExit">The boolean representing whether an option to exit should be printed</param>
</member>
<member name="M:winapp2ool.MenuMaker.menu(System.String)">
 <summary>
 Constructs and returns to the calling function a new menu String
 </summary>
 <param name="lineString">A string to be made into a menu line</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.MenuMaker.printMenuLine(System.String)">
 <summary>
 Prints a line in a menu
 </summary>
 <param name="lineString"></param>
</member>
<member name="M:winapp2ool.MenuMaker.menu(System.String,System.Boolean)">
 <summary>
 Constructs a menu string with a given alignment
 </summary>
 <param name="lineString">The line to be printed</param>
 <param name="isCentered">The boolean indicating whether the line text should be centered</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.MenuMaker.printMenuLine(System.String,System.Boolean)">
 <summary>
 Prints a menu string with a given alignment
 </summary>
 <param name="lineString"></param>
 <param name="isCenteredLine">The boolean indicating whether the line text should be centered</param>
</member>
<member name="M:winapp2ool.MenuMaker.printMenuOpt(System.String,System.String)">
 <summary>
 Prints a numbered menu option after padding it to a set length
 </summary>
 <param name="lineString1">The first part of the menu option</param>
 <param name="lineString2">The second part of the menu option</param>
</member>
<member name="M:winapp2ool.MenuMaker.revertMenu">
 <summary>
 Flips the exitCode boolean so we can return to the menu when desired
 </summary>
</member>
<member name="M:winapp2ool.MenuMaker.undoAnyPendingExits">
 <summary>
 Forces the exitCode to be False
 </summary>
</member>
<member name="M:winapp2ool.MenuMaker.mkMenuLine(System.String,System.String)">
 <summary>
 Constructs a menu line fit to the width of the console
 </summary>
 <param name="line">The line to be printed</param>
 <param name="align">The alignment of the line to be printed. 'l' for Left or 'c' for Centre</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.MenuMaker.padToEnd(System.String@,System.Int32)">
 <summary>
 Pads a given string with spaces 
 </summary>
 <param name="out">The string to be padded</param>
 <param name="targetLen">The end length to which the string should be padded</param>
</member>
<member name="M:winapp2ool.MenuMaker.bmenu(System.String)">
 <summary>
 Prints a box with a single message inside it 
 </summary>
 <param name="text">The string to be printed in the box</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.MenuMaker.tmenu(System.String)">
 <summary>
 Prints the topmost part of the menu with no bottom
 </summary>
 <param name="text">The String to be printed in the faux menu header</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.MenuMaker.replDir(System.String)">
 <summary>
 Replaces instances of the current directory in a path string ".."
 </summary>
 <param name="dirStr">A String containing a windows path</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.MenuMaker.appendNewLine(System.String)">
 <summary>
 Appends a newline to a given String
 </summary>
 <param name="line">The string to be appended</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.MenuMaker.cwl(System.String)">
 <summary>
 Prints a line with a string if we're not surpressing output.
 </summary>
 <param name="msg">The string to be printed</param>
</member>
<member name="M:winapp2ool.MenuMaker.pendingExit">
 <summary>
 Clears the console if there's a pending exit, returns exitCode
 </summary>
 <returns></returns>
</member>
<member name="T:winapp2ool.Merge">
 <summary>
 A module that facilitates the merging of two user defined iniFile objects
 </summary>
</member>
<member name="M:winapp2ool.Merge.initMergeParams(winapp2ool.iniFileHandler.iniFile@,winapp2ool.iniFileHandler.iniFile@,winapp2ool.iniFileHandler.iniFile@,System.Boolean@)">
 <summary>
 Initializes the default module settings and returns references to them to the calling function
 </summary>
 <param name="firstFile">The winapp2.ini file</param>
 <param name="secondFile">The file to be merged</param>
 <param name="thirdFile">The output file</param>
 <param name="mm">The boolean representing the mergemode</param>
</member>
<member name="M:winapp2ool.Merge.remoteMerge(winapp2ool.iniFileHandler.iniFile,winapp2ool.iniFileHandler.iniFile,winapp2ool.iniFileHandler.iniFile,System.Boolean)">
 <summary>
 Merges two iniFiles from outside the module
 </summary>
 <param name="firstFile">The winapp2.ini file</param>
 <param name="secondFile">The file to be merged</param>
 <param name="thirdFile">The output file</param>
 <param name="mm">The boolean representing the mergemode</param>
</member>
<member name="M:winapp2ool.Merge.initDefaultSettings">
 <summary>
 Restores the default state of the module's parameters
 </summary>
</member>
<member name="M:winapp2ool.Merge.printMenu">
 <summary>
 Prints the main menu to the user
 </summary>
</member>
<member name="M:winapp2ool.Merge.handleUserInput(System.String)">
 <summary>
 Processes the user's input and acts accordingly based on the state of the program
 </summary>
 <param name="input">The String containing the user's input</param>
</member>
<member name="M:winapp2ool.Merge.changeMergeName(System.String)">
 <summary>
 Changes the merge file's name
 </summary>
 <param name="newName">the new name for the merge file</param>
</member>
<member name="M:winapp2ool.Merge.initMerge">
 <summary>
 Validates iniFiles and begins the merging process
 </summary>
</member>
<member name="M:winapp2ool.Merge.merge">
 <summary>
 Conducts the merger of our two iniFiles
 </summary>
</member>
<member name="M:winapp2ool.Merge.processMergeMode(winapp2ool.iniFileHandler.iniFile@,winapp2ool.iniFileHandler.iniFile@)">
 <summary>
 Performs conflict resolution for the merge process
 </summary>
 <param name="first">The iniFile to be merged into</param>
 <param name="second">The file to merge</param>
</member>
<member name="T:winapp2ool.winapp2handler">
 <summary>
 Provides an object model and some helpful functions for working with winapp2.ini format .ini files
 </summary>
</member>
<member name="M:winapp2ool.winapp2handler.replaceAndSort(System.Collections.Generic.List{System.String},System.String,System.String)">
 <summary>
 Sorts a list of strings after performing some mutations on the data (if necessary). Returns the sorted list of strings.
 </summary>
 <param name="ListToBeSorted">A list of strings for sorting </param>
 <param name="characterToReplace">A character (string) to replace</param>
 <param name="replacementText">The chosen replacement text</param>
 <returns> The sorted state of the listToBeSorted</returns>
</member>
<member name="M:winapp2ool.winapp2handler.trackChanges(System.Collections.Generic.Dictionary{System.String,System.String}@,System.String,System.String)">
 <summary>
 Tracks renames made while mutating data for string sorting.
 </summary>
 <param name="changeDict">The dictionary containing changes</param>
 <param name="currentValue">The current value of a string</param>
 <param name="newValue">The new value of a piece of a string</param>
</member>
<member name="M:winapp2ool.winapp2handler.undoChanges(System.Collections.Generic.Dictionary{System.String,System.String}@,System.Collections.Generic.List{System.String}[]@)">
 <summary>
 Restores the original state of data mutated for the purposes of string sorting.
 </summary>
 <param name="changeDict">The dictionary containing changes made to data in the lists</param>
 <param name="lstArray">An array containing lists of strings whose data has been modified</param>
</member>
<member name="M:winapp2ool.winapp2handler.findLongestNumLength(System.Collections.Generic.List{System.String}@)">
 <summary>
 Searches the input list for numbers and returns the length of the longest number.
 </summary>
 <param name="lst">A list of strings to be searched</param>
 <returns>The length of the longest number in lst</returns>
</member>
<member name="M:winapp2ool.winapp2handler.findAndReplaceNumbers(System.Collections.Generic.List{System.String}@,System.Collections.Generic.Dictionary{System.String,System.String}@)">
 <summary>
 Detects the longest length number in a given list of strings and prepends all shorter numbers with zeroes such that all numbers are the same length
 </summary>
 This is to maintain numerical precedence in string sorting, ie. larger numbers come alphabetically "after" smaller numbers. 
 <param name="listToBeSorted">The list to be modified prior to sorting</param>
 <param name="changes">The dictionary of changes made to the strings in listToBeSorted</param>
</member>
<member name="M:winapp2ool.winapp2handler.replaceStrAtIndexOf(System.Collections.Generic.List{System.String}@,System.String,System.String)">
 <summary>
 Replaces an item in a list of strings at the index of another given item
 </summary>
 <param name="list">The list containing all the strings</param>
 <param name="indexOfText">The text to be replaced</param>
 <param name="newText">The replacement text</param>
</member>
<member name="M:winapp2ool.winapp2handler.padNumberStr(System.Int32,System.String)">
 <summary>
 Pads a number to a given length by preceeding it with zeroes (0's) and returns the padded number
 </summary>
 <param name="longestNumLen">The desired maxmimum length of a number</param>
 <param name="num">a given number</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.winapp2handler.removeEntries(System.Collections.Generic.List{winapp2ool.winapp2handler.winapp2entry}@,System.Collections.Generic.List{winapp2ool.winapp2handler.winapp2entry}@)">
 <summary>
 Removes winapp2entry objects from a given winapp2file sectionList
 </summary>
 <param name="sectionList">The list of winapp2sections </param>
 <param name="removalList"></param>
</member>
<member name="M:winapp2ool.winapp2handler.sortEntryNames(winapp2ool.iniFileHandler.iniFile)">
 <summary>
 Sort the sections in an inifile by name
 </summary>
 <param name="file">The iniFile to be sorted</param>
 <returns></returns>
</member>
<member name="T:winapp2ool.winapp2handler.winapp2file">
 <summary>
 Represents a winapp2.ini format iniFile, and enables easy access to format specific iniFile information
 </summary>
</member>
<member name="M:winapp2ool.winapp2handler.winapp2file.#ctor(winapp2ool.iniFileHandler.iniFile)">
 <summary>
 Create a new meta winapp2 object from an iniFile object
 </summary>
 <param name="file">A winapp2.ini format iniFile object</param>
</member>
<member name="M:winapp2ool.winapp2handler.winapp2file.addToInnerFile(System.Int32,winapp2ool.winapp2handler.winapp2entry,winapp2ool.iniFileHandler.iniSection)">
 <summary>
 Inserts an iniSection into its respective tracking file and records the winapp2entry object form accordingly. 
 </summary>
 <param name="ind">The index of the tracking file</param>
 <param name="entry">The section in winapp2entry format</param>
 <param name="section">A section to be tracked</param>
</member>
<member name="M:winapp2ool.winapp2handler.winapp2file.count">
 <summary>
 Returns the total number of entries stored in the internal iniFile objects
 </summary>
 <returns></returns>
</member>
<member name="M:winapp2ool.winapp2handler.winapp2file.sortInneriniFiles">
 <summary>
 Sorts the internal iniFile objects in winapp2.ini format order
 </summary>
</member>
<member name="M:winapp2ool.winapp2handler.winapp2file.rebuildInnerIni(System.Collections.Generic.List{winapp2ool.winapp2handler.winapp2entry}@)">
 <summary>
 Rebuilds a list of winapp2entry objects back into iniSection objcts and returns the collection of them as an iniFile
 </summary>
 <param name="entryList"></param>
 <returns></returns>
</member>
<member name="M:winapp2ool.winapp2handler.winapp2file.rebuildToIniFiles">
 <summary>
 Updates the internal iniFile objects
 </summary>
</member>
<member name="M:winapp2ool.winapp2handler.winapp2file.winapp2string">
 <summary>
 Builds and returns the winapp2.ini text including header comments for writing back to a file
 </summary>
 <returns></returns>
</member>
<member name="T:winapp2ool.winapp2handler.winapp2entry">
 <summary>
 Represents a winapp2.ini format iniKey and provides direct access to the keys by their type
 </summary>
</member>
<member name="M:winapp2ool.winapp2handler.winapp2entry.#ctor(winapp2ool.iniFileHandler.iniSection)">
 <summary>
 Construct a new winapp2entry object from an iniSection
 </summary>
 <param name="section">A winapp2.ini format iniSection object</param>
</member>
<member name="M:winapp2ool.winapp2handler.winapp2entry.updKeyListList">
 <summary>
 Clears and updates the keyListList with the current state of the keys
 </summary>
</member>
<member name="M:winapp2ool.winapp2handler.winapp2entry.dumpToListOfStrings">
 <summary>
 Returns the keys in each keyList back as a list of Strings in winapp2.ini (style) order
 </summary>
 <returns></returns>
</member>
<member name="T:winapp2ool.winapp2handler.winapp2KeyParameters">
 <summary>
 Provides a few helpful methods for dissecting winapp2key objects
 </summary>
</member>
<member name="M:winapp2ool.winapp2handler.winapp2KeyParameters.reconstructKey(winapp2ool.iniFileHandler.iniKey@)">
 <summary>
 Reconstructs a FileKey to hold the format of FileKeyX=PATH|FILE;FILE;FILE....|FLAG
 </summary>
 <param name="key">An iniKey to be reconstructed</param>
 Also trims empty comments 
</member>
<member name="T:winapp2ool.exceptionHandler">
 <summary>
 Handles the processing of errors caught throughout the operation of winapp2ool, hopefully gracefully.
 </summary>
</member>
<member name="M:winapp2ool.exceptionHandler.exc(System.Exception@)">
 <summary>
 Prints out excpetions and any other information related to them that a use may need.
 </summary>
 <param name="ex">A given exception captured during winapp2ool's execution</param>
</member>
<member name="M:winapp2ool.exceptionHandler.offlineErr">
 <summary>
 Inform the user that they cannot 
 </summary>
 Consider allowing the user to reestablish their internet connection here
</member>
<member name="M:winapp2ool.exceptionHandler.printDotNetOutOfDateError">
 <summary>
 Prints output to the user instructing them to update their .NET Framework 
 </summary>
</member>
<member name="M:winapp2ool.Winapp2ool.printUpdNotif(System.Boolean,System.String,System.String,System.String)">
 <summary>
 Informs the user when an update is available
 </summary>
 <param name="cond">The update condition</param>
 <param name="updName">The item (winapp2.ini or winapp2ool) for which there is a pending update</param>
 <param name="oldVer">The old (currently in use) version</param>
 <param name="newVer">The updated version pending download</param>
</member>
<member name="M:winapp2ool.Winapp2ool.denySettingOffline">
 <summary>
 Denies the ability to access online-only functions if offline
 </summary>
 <returns></returns>
</member>
<member name="M:winapp2ool.Winapp2ool.printMenu">
 <summary>
 Prints the main menu to the user
 </summary>
</member>
<member name="M:winapp2ool.Winapp2ool.main">
 <summary>
 Presents the winapp2ool menu to the user, initiates the main event loop for the application
 </summary>
</member>
<member name="M:winapp2ool.Winapp2ool.handleUserInput(System.String)">
 <summary>
 Handles the user input for the menu
 </summary>
 <param name="input">The String containing the user input</param>
</member>
<member name="M:winapp2ool.Winapp2ool.getLocalWinapp2Version">
 <summary>
 Attempts to return the version number from the first line of winapp2.ini, returns "000000" if it can't
 </summary>
</member>
<member name="M:winapp2ool.Winapp2ool.checkUpdates">
 <summary>
 Checks the versions of winapp2ool, .NET, and winapp2.ini and records if any are outdated.
 </summary>
</member>
<member name="M:winapp2ool.Winapp2ool.updateCheckFailed(System.String,System.Boolean)">
 <summary>
 Handles the case where the update check has failed
 </summary>
 <param name="name">The name of the component whose update check failed</param>
 <param name="chkOnline">A flag specifying that that the internet connection should be retested</param>
</member>
<member name="M:winapp2ool.Winapp2ool.chkOfflineMode">
 <summary>
 Updates the offline status of winapp2ool
 </summary>
</member>
<member name="M:winapp2ool.Winapp2ool.changeFileParams(winapp2ool.iniFileHandler.iniFile@,System.Boolean@)">
 <summary>
 Prompts the user to change a file's parameters, marks both settings and the file as having been changed 
 </summary>
 <param name="someFile">A file whose parameters will be changed</param>
 <param name="settingsChangedSetting">The boolean indicating that a setting has been changed</param>
</member>
<member name="M:winapp2ool.Winapp2ool.toggleSettingParam(System.Boolean@,System.String,System.Boolean@)">
 <summary>
 Toggles a setting's boolean state and marks its tracker true
 </summary>
 <param name="setting">A boolean to be toggled</param>
 <param name="paramText">The string explaining the setting being toggled</param>
 <param name="settingsChangedSetting">The boolean indicating that the setting has been modified</param>
</member>
<member name="M:winapp2ool.Winapp2ool.prependNewLines(System.Boolean)">
 <summary>
 Returns 1 or 2 newline characters conditionally
 </summary>
 <param name="cond">The parameter under which to return two newlines</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.Winapp2ool.getWinVer">
 <summary>
 Attempts to return the Windows version number, return 0.0 if it cannot
 </summary>
 <returns></returns>
</member>
<member name="M:winapp2ool.Winapp2ool.toggleDownload(System.Boolean@,System.Boolean@)">
 <summary>
 Handles toggling downloading of winapp2.ini from menus
 </summary>
 <param name="download">The normal download boolean</param>
 <param name="settingsChanged">The boolean indicating that settings have changed</param>
</member>
<member name="M:winapp2ool.Winapp2ool.GetNameFromDL(System.Boolean,System.Boolean)">
 <summary>
 Returns the online download status of winapp2.ini as a String, empty string if not downloading
 </summary>
 <param name="d">The normal download boolean</param>
 <param name="dncc">The non-ccleaner download boolean</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.Winapp2ool.resetModuleSettings(System.String,System.Action)">
 <summary>
 Resets a module's settings to the defaults
 </summary>
 <param name="name">The name of the module to be reset</param>
 <param name="setDefaultParams">The function that resets the module's settings</param>
</member>
<member name="M:winapp2ool.Winapp2ool.appendStrs(System.String[],System.String@)">
 <summary>
 Appends a series of values onto a String
 </summary>
 <param name="toAppend">The values to append</param>
 <param name="out">The given string to be extended</param>
</member>
<member name="M:winapp2ool.Winapp2ool.initModule(System.String,System.Action,System.Action{System.String},System.Boolean)">
 <summary>
 Initializes a module's menu, prints it, and handles the user input. Effectively the main event loop for winapp2ool and its components
 </summary>
 <param name="name">The name of the module</param>
 <param name="callMenu">The function that prints the module's menu</param>
 <param name="handleInput">The function that handle's the module's input</param>
</member>
<member name="T:winapp2ool.Trim">
    <summary>
    This module parses a winapp2.ini file and checks each entry therein 
    removing any whose detection parameters do not exist on the current system
    and outputting a "trimmed" file containing only entries that exist on the system
    to the user.
   </summary>
</member>
<member name="M:winapp2ool.Trim.initDefaultSettings">
 <summary>
 Restores the default state of the module's parameters
 </summary>
</member>
<member name="M:winapp2ool.Trim.initTrimParams(winapp2ool.iniFileHandler.iniFile@,winapp2ool.iniFileHandler.iniFile@,System.Boolean@,System.Boolean@)">
 <summary>
 Initializes the default module settings and returns references to them to the calling function
 </summary>
 <param name="firstFile">The winapp2.ini file</param>
 <param name="secondFile">The output file</param>
 <param name="d">Download boolean</param>
 <param name="dncc">Non-CCleaner download boolean</param>
</member>
<member name="M:winapp2ool.Trim.remoteTrim(winapp2ool.iniFileHandler.iniFile,winapp2ool.iniFileHandler.iniFile,System.Boolean,System.Boolean)">
 <summary>
 Runs the trimmer from outside the module
 </summary>
 <param name="firstFile">The winapp2.ini file</param>
 <param name="secondFile">The output file</param>
 <param name="d">Download boolean</param>
 <param name="ncc">Non-CCleaner download boolean</param>
</member>
<member name="M:winapp2ool.Trim.printmenu">
 <summary>
 Prints the main menu to the user
 </summary>
</member>
<member name="M:winapp2ool.Trim.handleUserInput(System.String)">
 <summary>
 Handles the user input from the menu
 </summary>
 <param name="input">The String containing the user's input</param>
</member>
<member name="M:winapp2ool.Trim.initTrim">
 <summary>
 Initiates the trim after validating our ini files
 </summary>
</member>
<member name="M:winapp2ool.Trim.initDownloadedTrim(System.String)">
 <summary>
 Load a remote .ini file and trim it
 </summary>
 <param name="link">The link to the online resource</param>
</member>
<member name="M:winapp2ool.Trim.trim(winapp2ool.winapp2handler.winapp2file)">
 <summary>
 Performs the trim
 </summary>
 <param name="winapp2">A winapp2.ini file</param>
</member>
<member name="M:winapp2ool.Trim.checkExistence(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@,System.Func{System.String,System.Boolean})">
 <summary>
 Evaluates a list of keys to observe whether they exist on the current machine
 </summary>
 <param name="keyList">The list of iniKeys to query</param>
 <param name="chkExist">The function that evaluates that keyType's parameters</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.Trim.processEntryExistence(winapp2ool.winapp2handler.winapp2entry@)">
 <summary>
 Returns true if an entry's detection criteria is matched by the system, false otherwise.
 </summary>
 <param name="entry">A winapp2.ini entry</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.Trim.processEntryList(System.Collections.Generic.List{winapp2ool.winapp2handler.winapp2entry}@)">
 <summary>
 Processess a list of winapp2.ini entries and removes any from the list that wouldn't be detected by CCleaner
 </summary>
 <param name="entryList">The list of winapp2entry objects to check existence for</param>
</member>
<member name="M:winapp2ool.Trim.checkSpecialDetects(System.String)">
 <summary>
 Returns true if a SpecialDetect location exist, false otherwise
 </summary>
 <param name="key">A SpecialDetect format iniKey</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.Trim.checkExist(System.String)">
 <summary>
 Handles passing off checks for the DET_CHROME case
 </summary>
 <param name="key">An individual Detect parameter for the DET_CHROME case</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.Trim.checkRegExist(System.String)">
 <summary>
 Returns True if a given Detect path exists in the system registry, false otherwise.
 </summary>
 <param name="path">A registry path from a Detect key</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.Trim.checkFileExist(System.String)">
 <summary>
 Returns True if a DetectFile path exists on the system, false otherwise.
 </summary>
 <param name="key">A DetectFile path</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.Trim.swapDir(System.String@,System.String)">
 <summary>
 Swaps out a directory with the ProgramFiles parameterization on 64bit computers
 </summary>
 <param name="dir">The text to be modified</param>
 <param name="key">The original state of the text</param>
</member>
<member name="M:winapp2ool.Trim.expandWildcard(System.String)">
 <summary>
 Interpret parameterized wildcards for the current system
 </summary>
 <param name="dir">A path containing a wildcard</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.Trim.checkDetOS(System.String)">
 <summary>
 Returns true if we satisfy the DetectOS citeria, false otherwise
 </summary>
 <param name="value">The DetectOS criteria to be checked</param>
 <returns></returns>
</member>
<member name="T:winapp2ool.WinappDebug">
 <summary>
 A program whose purpose is to observe and attempt to repair errors in winapp2.ini
 </summary>
</member>
<member name="M:winapp2ool.WinappDebug.resetScanSettings">
 <summary>
 Resets the individual scan settings to their defaults
 </summary>
</member>
<member name="M:winapp2ool.WinappDebug.initDebugParams(winapp2ool.iniFileHandler.iniFile@,winapp2ool.iniFileHandler.iniFile@,System.Boolean)">
 <summary>
 Initializes the default module settings and returns references to them to the calling function
 </summary>
 <param name="firstFile">The winapp2.ini file</param>
 <param name="secondFile">The save file</param>
 <param name="cf">boolean for autocorrect</param>
</member>
<member name="M:winapp2ool.WinappDebug.initDefaultSettings">
 <summary>
 Restore the default state of the module's parameters
 </summary>
</member>
<member name="M:winapp2ool.WinappDebug.remoteDebug(winapp2ool.iniFileHandler.iniFile@,winapp2ool.iniFileHandler.iniFile,System.Boolean)">
 <summary>
 Begins the debugger from outside the module
 </summary>
 <param name="firstFile">The winapp2.ini file</param>
 <param name="secondFile">The output file</param>
 <param name="cformatting">The autocorrect boolean</param>
</member>
<member name="M:winapp2ool.WinappDebug.toggleScanSetting(System.Boolean@,System.Boolean@,System.String)">
 <summary>
 Matches paired boolean states for scans and their repairs
 </summary>
 ie. make sure that if a scan is disabled, so too is its repair, and if a repair is enabled, so too is its scan
 <param name="setting"></param>
 <param name="pairedSetting"></param>
 <param name="type"></param>
</member>
<member name="M:winapp2ool.WinappDebug.printScansMenu">
 <summary>
 Prints the menu for individual scans and their repairs to the user
 </summary>
</member>
<member name="M:winapp2ool.WinappDebug.handleScanInput(System.String)">
 <summary>
 Handles the user input for the scan settings menu
 </summary>
 <param name="input">The String containing the user's input</param>
</member>
<member name="M:winapp2ool.WinappDebug.printMenu">
 <summary>
 Prints the main menu to the user
 </summary>
</member>
<member name="M:winapp2ool.WinappDebug.handleUserInput(System.String)">
 <summary>
 Handles the user's input from the menu
 </summary>
 <param name="input">The String containing the user's input</param>
</member>
<member name="M:winapp2ool.WinappDebug.initDebug">
 <summary>
 Validates and debugs the ini file, informs the user upon completion
 </summary>
</member>
<member name="M:winapp2ool.WinappDebug.debug(winapp2ool.iniFileHandler.iniFile)">
 <summary>
 Performs syntax and format checking on a winapp2.ini format ini file
 </summary>
 <param name="cfile">A winapp2.ini format iniFile object</param>
</member>
<member name="M:winapp2ool.WinappDebug.processEntries(winapp2ool.winapp2handler.winapp2file@)">
 <summary>
 Initiates the debugger on each entry in a given winapp2file
 </summary>
 <param name="winapp">The winapp2file to be debugged</param>
</member>
<member name="M:winapp2ool.WinappDebug.alphabetizeEntries(winapp2ool.winapp2handler.winapp2file@)">
 <summary>
 Alphabetizes all the entries in a winapp2.ini file and observes any that were out of place
 </summary>
 <param name="winapp">The object containing the winapp2.ini being operated on</param>
</member>
<member name="M:winapp2ool.WinappDebug.rewriteChanges(winapp2ool.winapp2handler.winapp2file@)">
 <summary>
 Overwrites the the file on disk with any changes we've made if we are saving them
 </summary>
 <param name="winapp2file">The object representing winapp2.ini</param>
</member>
<member name="M:winapp2ool.WinappDebug.buildNeighborList(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
 <summary>
 Construct a list of neighbors for strings in a list
 </summary>
 <param name="someList">A list of strings</param>
 <param name="neighborList">The paired values of neighbors in the list of strings</param>
</member>
<member name="M:winapp2ool.WinappDebug.findOutOfPlace(System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@,System.String,System.Collections.Generic.List{System.Int32}@,System.Boolean@)">
 <summary>
 Assess a list and its sorted state to obvserve changes in neighboring strings
 </summary>
 eg. changes made to string ordering through sorting
 <param name="someList">A list of strings</param>
 <param name="sortedList">The sorted state of someList</param>
 <param name="findType">The type of neighbor checking (keyType for iniKey values)</param>
 <param name="LineCountList">A list containing the line counts of the Strings in someList</param>
</member>
<member name="M:winapp2ool.WinappDebug.initCFormat(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@)">
 <summary>
 Initiates the cFormat function
 </summary>
 <param name="keyList">A given list of iniKey objects to have their format audited</param>
</member>
<member name="M:winapp2ool.WinappDebug.cFormat(winapp2ool.iniFileHandler.iniKey,System.Int32@,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@)">
 <summary>
 Does some basic formatting checks that apply to most winapp2.ini format iniKey objects
 </summary>
 <param name="key">The current iniKey object being processed</param>
 <param name="keyNumber">The current expected key number</param>
 <param name="keyValues">The current list of observed inikey values</param>
 <param name="dupeList">A tracking list of detected duplicate iniKeys</param>
</member>
<member name="M:winapp2ool.WinappDebug.checkCasingError(System.String[],System.String)">
 <summary>
 Checks a String for casing errors against a provided array of cased strings, returns the input string if no error is detected
 </summary>
 <param name="caseArray">The parent array of cased Strings</param>
 <param name="keyValue">The string to be checked for casing errors</param>
</member>
<member name="M:winapp2ool.WinappDebug.cEnVar(winapp2ool.iniFileHandler.iniKey)">
 <summary>
 Assess the formatting of any %EnvironmentVariables% in a given iniKey
 </summary>
 <param name="key">An iniKey object to be processed</param>
</member>
<member name="M:winapp2ool.WinappDebug.cValidity(winapp2ool.iniFileHandler.iniKey)">
 <summary>
 Does basic syntax and formatting audits that apply across all keys, returns false iff a key in malformatted
 </summary>
 <param name="key">an iniKey object to be checked for errors</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.WinappDebug.fixFormat(System.Boolean)">
 <summary>
 Determines whether or not a fix that sits behind an optional flag should be run
 </summary>
 <param name="setting">The parameter to be observed if only correcting some formatting</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.WinappDebug.pLangSecRef(winapp2ool.winapp2handler.winapp2entry@)">
 <summary>
 Processes a list of LangSecRef or Section format winapp2.ini iniKey objects and checks them for errors, correcting where possible
 </summary>
 <param name="entry">A winapp2entry to process</param>
</member>
<member name="M:winapp2ool.WinappDebug.pFileKey(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@)">
 <summary>
 Processes a list of FileKEy format winapp2.ini iniKey objects and checks them for errors, correcting where possible
 </summary>
 <param name="keyList"></param>
</member>
<member name="M:winapp2ool.WinappDebug.pDefault(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey})">
 <summary>
 Processes the Default key(s - there should only be one!) in an entry
 </summary>
 <param name="keyList">The list of Default keys in an winapp2entry</param>
</member>
<member name="M:winapp2ool.WinappDebug.confirmOnlyOne(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey})">
 <summary>
 Prints an error for each object in a list of iniKey objects with a length greater than 1
 </summary>
 <param name="keylist">A list of iniKey objects</param>
</member>
<member name="M:winapp2ool.WinappDebug.validateKeys(winapp2ool.winapp2handler.winapp2entry@)">
 <summary>
 Checks the validity of the keys in an entry and removes any that are too problematic to continue with
 </summary>
 <param name="entry">A winapp2entry object to be audited</param>
</member>
<member name="M:winapp2ool.WinappDebug.processEntry(winapp2ool.winapp2handler.winapp2entry@)">
 <summary>
 Processes a winapp2entry object (generated from a winapp2.ini format iniKey object) for errors 
 </summary>
 <param name="entry">The winapp2entry object to be processed</param>
</member>
<member name="M:winapp2ool.WinappDebug.pDetOS(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@)">
 <summary>
 Processes a list of DetectOS format winapp2.ini iniKey objects and checks them for errors, correcting where possible
 </summary>
 <param name="keyList">A list of winapp2.ini DetectOS format iniKey objects to be processed</param>
</member>
<member name="M:winapp2ool.WinappDebug.pWarning(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@)">
 <summary>
 Processes a list of Warning format winapp2.ini iniKey objects and checks them for errors, correcting where possible
 </summary>
 <param name="keyList">A list of winapp2.ini Warning format iniKeys to be scanned</param>
</member>
<member name="M:winapp2ool.WinappDebug.pDetectFile(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@)">
 <summary>
 Processes a list of DetectFile format winapp2.ini iniKey objects and checks them for errors, correcting where possible
 </summary>
 <param name="keyList">A list of winapp2.ini DetectFile format iniKeys to be scanned</param>
</member>
<member name="M:winapp2ool.WinappDebug.chkPathFormatValidity(winapp2ool.iniFileHandler.iniKey,System.Boolean)">
 <summary>
 Audits the syntax of file system and registry paths
 </summary>
 <param name="key">An iniKey to be audited</param>
 <param name="isRegistry">Specifies whether the given key holds a registry path</param>
</member>
<member name="M:winapp2ool.WinappDebug.getFirstDir(System.String)">
 <summary>
 Returns the first portion of a registry or filepath parameterization
 </summary>
 <param name="val">The directory listing to be split</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.WinappDebug.pRegDetect(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey})">
 <summary>
Processes a list of Detect format winapp2.ini iniKey objects and checks them for errors, correcting where possible
 </summary>
 <param name="keylist">A list of iniKey objects containing RegKey format winapp2.ini keys</param>
</member>
<member name="M:winapp2ool.WinappDebug.chkDupes(System.Collections.Generic.List{System.String}@,System.String)">
 <summary>
 Checks whether the current value appears in the given list of strings (case insensitive). Returns true if there is a duplicate,
 otherwise, adds the current value to the list.
 </summary>
 <param name="valueStrings">A list of strings holding observed values</param>
 <param name="currentValue">The current value to be audited</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.WinappDebug.checkDupsAndNumbering(System.Collections.Generic.List{System.String}@,winapp2ool.iniFileHandler.iniKey@,System.Int32@,System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@)">
 <summary>
 Audits the numbering of keys in their name from 1 to infinity and returns any duplicate keys detected back to the calling function
 </summary>
 <param name="keyStrings">The list of values from the iniKeys being audited</param>
 <param name="key">The current key being audited</param>
 <param name="keyNumber">The current expected key number</param>
 <param name="dupeList">The list containing any duplicate iniKey objects found during the audit</param>
</member>
<member name="M:winapp2ool.WinappDebug.pDetect(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@)">
 <summary>
 Processes a list of DetectFile or Detect format winapp2.ini iniKey objects and checks them for errors, correcting where possible
 </summary>
 <param name="keyList">The list of iniKeys in winapp2 Detect or DetectFile format</param>
</member>
<member name="M:winapp2ool.WinappDebug.sortKeys(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@)">
 <summary>
 Sorts a list of iniKey objects alphabetically (with some changes made for winapp2.ini syntax) based on the contents of their value field
 </summary>
 <param name="keyList">The list of iniKey objects to be sorted</param>
</member>
<member name="M:winapp2ool.WinappDebug.renumberKeys(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@,System.Collections.Generic.List{System.String})">
 <summary>
 Rewrites the iniKey data in a given list of iniKeys to be numerically ordered and sorted alphabetically
 </summary>
 <param name="keyList">The list of iniKey objects to reorder</param>
 <param name="sortedKeyList">The sorted state of the key values in the list</param>
</member>
<member name="M:winapp2ool.WinappDebug.pRegKey(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey})">
 <summary>
 Processes a list of RegKey format winapp2.ini iniKey objects and checks them for errors, correcting where possible
 </summary>
 <param name="keyList">A list of winapp2.ini format RegKey iniKey objects</param>
</member>
<member name="M:winapp2ool.WinappDebug.cFlags(winapp2ool.iniFileHandler.iniKey@,System.String[])">
 <summary>
 Detects if a pipe symbol is missing before an array of given params
 </summary>
 <param name="key">An iniKey object to be observed</param>
 <param name="flagStrs">The array of parameters which should be prceeded by a pipe symbol if they exist in the key value</param>
</member>
<member name="M:winapp2ool.WinappDebug.pSpecialDetect(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@)">
 <summary>
 Processes a list of SpecialDetect format winapp2.ini iniKey objects and checks them for errors, correcting where possible
 </summary>
 <param name="keyList">A list of SpecialDetect format winapp2.ini iniKey objects</param>
</member>
<member name="M:winapp2ool.WinappDebug.pExcludeKey(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@,System.Boolean@,System.Boolean@)">
 <summary>
 Processes a list of ExcludeKey format winapp2.ini iniKey objects and checks them for errors, correcting where possible
 </summary>
 <param name="keyList">A list of ExcludeKey format winapp2.ini iniKey objects</param>
 <param name="hasF">Indicates whether the given list excludes filesystem locations</param>
 <param name="hasR">Indicates whether the given list excludes registry locations</param>
</member>
<member name="M:winapp2ool.WinappDebug.pathFromExcludeKey(winapp2ool.iniFileHandler.iniKey)">
 <summary>
 Returns the value from an ExcludeKey with the Flag parameter removed as a String
 </summary>
 <param name="key">An ExcludeKey iniKey</param>
 <returns></returns>
</member>
<member name="M:winapp2ool.WinappDebug.cOptimization(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@)">
 <summary>
 Attempts to merge FileKeys together if syntactically possible.
 </summary>
 <param name="keyList">A list of FileKeys</param>
</member>
<member name="M:winapp2ool.WinappDebug.printOptiSect(System.String,System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey})">
 <summary>
 Prints output from the Optimization function
 </summary>
 <param name="boxStr">The text to go in the optimization section box</param>
 <param name="keyList">The list of keys to be printed beneath the box</param>
</member>
<member name="M:winapp2ool.WinappDebug.trackParamAndFlags(System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@,winapp2ool.winapp2handler.winapp2KeyParameters)">
 <summary>
 Tracks params and flags from a winapp2key
 </summary>
 <param name="paramList">The list of params observed</param>
 <param name="flagList">The list of flags observed</param>
 <param name="params">The current set of params and flags</param>
</member>
<member name="M:winapp2ool.WinappDebug.addArgs(System.String@,winapp2ool.winapp2handler.winapp2KeyParameters)">
 <summary>
 Constructs a new iniKey in an attempt to merge keys together
 </summary>
 <param name="tmpKeyStr">The string to contain the new key text</param>
 <param name="tmp2wa2">A set of parameters to append</param>
</member>
<member name="M:winapp2ool.WinappDebug.removeDuplicateKeys(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@,System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey})">
 <summary>
 Removes any occurance of items in a list of iniKey objects from a given list of iniKey objects
 </summary>
 <param name="keylist">The list from which objects might be removed</param>
 <param name="dupeList">The list of objects to remove</param>
</member>
<member name="M:winapp2ool.WinappDebug.deDupeAndSort(System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey}@,System.Collections.Generic.List{winapp2ool.iniFileHandler.iniKey})">
 <summary>
 Removes duplicate keys from a list of iniKeys and sorts the result
 </summary>
 <param name="keyList">A list of iniKey objects to be culled and sorted</param>
 <param name="dupeList">A list of duplicate iniKey objects to be culled</param>
</member>
<member name="M:winapp2ool.WinappDebug.inputMismatchErr(System.Int32,System.String,System.String,System.String,System.Boolean)">
 <summary>
 Prints an error when data is received that does not match an expected value.
 </summary>
 <param name="linecount">The line number of the error</param>
 <param name="err">The string containing the output error text</param>
 <param name="received">The (erroneous) input data</param>
 <param name="expected">The expected data</param>
</member>
<member name="M:winapp2ool.WinappDebug.err(System.Int32,System.String,System.String)">
 <summary>
 Prints an error when invalid data is received.
 </summary>
 <param name="linecount">The line number of the error</param>
 <param name="errTxt">The string containing the output error text</param>
 <param name="received">The (erroneous) input data</param>
</member>
<member name="M:winapp2ool.WinappDebug.fullNameErrIf(System.Boolean,winapp2ool.winapp2handler.winapp2entry,System.String)">
 <summary>
 Prints an error followed by the [Full Name *] of the entry to which it belongs
 </summary>
 <param name="cond">The condition under which to print</param>
 <param name="entry">The entry containing an error</param>
 <param name="errTxt">The String containing the text to be printed to the user</param>
</member>
<member name="M:winapp2ool.WinappDebug.fullKeyErr(winapp2ool.iniFileHandler.iniKey,System.String,System.Boolean,System.Boolean,System.String@,System.String)">
 <summary>
 Prints an error whose output text contains an iniKey string
 </summary>
 <param name="key">The inikey to be printed</param>
 <param name="err">The string containing the output error text</param>
</member>
<member name="M:winapp2ool.WinappDebug.customErr(System.Int32,System.String,System.String[])">
 <summary>
 Prints arbitrarily defined errors without a precondition
 </summary>
 <param name="lineCount"></param>
 <param name="err"></param>
 <param name="lines"></param>
</member>
<member name="M:winapp2ool.WinappDebug.fixStr(System.Boolean,System.String@,System.String)">
 <summary>
 Replace a given string with a new value if the fix condition is met. 
 </summary>
 <param name="param">The condition under which the string should be replaced</param>
 <param name="currentValue">The current value of the given string</param>
 <param name="newValue">The replacement value for the given string</param>
</member>
</members>
</doc>
